---
- hosts: all
  vars:
    debrepo: "{{ ansible_facts['user_dir'] }}/.local/share/dot/packages"
    packages:
      - golang.org/x/tools/cmd/guru
      - github.com/motemen/gore/...
      - github.com/cweill/gotests/...
      - github.com/nsf/gocode
      - github.com/fatih/gomodifytags
      - golang.org/x/tools/gopls
  tasks:
    - name: Build src/serve.go
      command: go build -ldflags='-s -w' -o ~/bin/serve ~/src/dot/src/serve.go
      changed_when: false

    - name: Create directory for a local debian package repo
      file:
        path: "{{ debrepo }}"
        state: directory
        mode: '0750'

    - name: create local .deb package
      shell: |
          # gather sum info, fetch code and compile
          GOPATH="$(mktemp -d)"
          DEST="$(mktemp -d)"
          URL=$(echo "{{ item }}" | sed -e 's#/...$##')
          NAME=$(echo "${URL}" | rev | cut -d/ -f1 | rev)
          VERSION="$(go get -v -ldflags='-s -w' "{{ item }}" 2>&1|grep '^go: downloading'|head -1|cut -d\  -f 4|tr -d v)"
          BUILD=1
          SIZE=$(du -s "${GOPATH}/bin" | cut -f 1)
          # stick together contents of a .deb package
          fakeroot -- mkdir -p "${DEST}/{opt,DEBIAN}"
          fakeroot -- cp -r "${GOPATH}/bin" "${DEST}/opt/bin"
          fakeroot -- cat > "${DEST}/DEBIAN/control" <<EOF
          Package: ${NAME}
          Version: ${VERSION}-${BUILD}
          Section: devel
          Priority: optional
          Architecture: amd64
          Depends: golang (>= 1.13)
          Essential: no
          Installed-Size: ${SIZE}
          Maintainer: me
          Description: Locally built Go package: ${NAME}
          EOF
          # create package
          mkdir -p "{{ debrepo }}"
          fakeroot -- dpkg-deb --build "${DEST}" "{{ debrepo }}/${NAME}_${VERSION}-${BUILD}_amd64.deb"
          # cleanup
          rm -r "${GOPATH}" "${DEST}"
          exit 0
      loop: "{{ packages }}"
      changed_when: false
